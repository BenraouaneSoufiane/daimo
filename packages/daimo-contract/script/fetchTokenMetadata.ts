import * as fs from "fs";
import { Address, createPublicClient, http } from "viem";
import { base, baseGoerli } from "viem/chains";

import * as Contracts from "../src/generated";

const abi = Contracts.erc20ABI;

// This one spot is the only place where Daimo's stablecoin is hardcoded.
// Everything else is generated from the contract.
const chains = [
  {
    chain: baseGoerli,
    usdcAddress: "0x1B85deDe8178E18CdE599B4C9d913534553C3dBf" as Address,
    paymasterAddress: "0x13f490FafBb206440F25760A10C21A6220017fFa" as Address,
  },
  {
    chain: base,
    usdcAddress: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913" as Address,
    paymasterAddress: "0x939263eafe57038a072cb4edd6b25dd81a8a6c56" as Address,
  },
];

async function main() {
  const tokenMetadata = {} as any;
  for (const { chain, usdcAddress, paymasterAddress } of chains) {
    const publicClient = createPublicClient({ chain, transport: http() });

    console.log("✔ Fetching erc20 metadata");
    const address = usdcAddress;
    const [decimals, symbol, name] = await Promise.all([
      publicClient.readContract({ abi, address, functionName: "decimals" }),
      publicClient.readContract({ abi, address, functionName: "symbol" }),
      publicClient.readContract({ abi, address, functionName: "name" }),
    ]);
    const chainId = chain.id;

    const meta = { address, decimals, symbol, name, chainId, paymasterAddress };
    tokenMetadata[chain.id] = meta;
  }

  const fileStr = `// Generated by script/fetchTokenMetadata.ts

export const tokenMetadata = ${JSON.stringify(tokenMetadata, null, 2)} as const;
`;

  console.log("✔ Writing to src/tokenMetadata.ts");
  fs.writeFileSync("./src/tokenMetadata.ts", fileStr);
}

main();
